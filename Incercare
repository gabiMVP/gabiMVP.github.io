using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Security.Cryptography;

namespace Block
{
    class Program
    {
       static  int[] s1 = new int[16] { 6, 4, 12, 5, 0, 7, 2, 15, 1, 16, 3, 13, 8, 10, 9, 11 };
       static int[] p1 = new int[16] { 4,8,6,10,1,3,0,5,12,15,14,16,2,11,7,9};
       static  int[] intrare = new int[4] { 1, 2, 3, 4 };
        static void Main(string[] args)
        {
           int [] DupaSbox = (Sbox(intrare));
            int[] cei16Biti = Biti(DupaSbox);
            afiseaza(cei16Biti);
            KnuthShuffle(cei16Biti);
            //afiseaza(cei16Biti);
           int[] x=  faNumere(cei16Biti);
            afiseaza(x);
        }


        public static int[] Sbox(int[] intrare) {
            int[] iesire= new int[4];
            for (int i =0;i<intrare.Length;i++) {
                iesire[i] = s1[intrare[i]];
                 }
            return iesire;
            }



        public static int[] Pbox(int[] intrare)
        {
            int[] iesire = new int[4];
            for (int i = 0; i < intrare.Length; i++)
            {
                iesire[i] = p1[intrare[i]];
            }
            return iesire;
        }

        public static void afiseaza(int[] intrare) {
            for (int i = 0; i < intrare.Length; i++) {
                Console.Write(intrare[i] + " ");
            }
        }

        public static void KnuthShuffle<T>(T[] array)
        {
            System.Random random = new System.Random();
            for (int i = 0; i < array.Length; i++)
            {
                int j = random.Next(i, array.Length); // Don't select from the entire array on subsequent loops
                T temp = array[i]; array[i] = array[j]; array[j] = temp;
            }
        }

        public static int[] Biti(int[] intrare) {
            String s="";
            for (int i = 0; i < intrare.Length; i++) {
                s += Convert.ToString(intrare[i], 2).PadLeft(4, '0');
                //int[] bits =  s.Select(c => int.Parse(c.ToString())).ToArray();

            }
            return s.Select(c => int.Parse(c.ToString())).ToArray();

        }

        public static int[] faNumere(int[] intrare) {
            String s = "";
  
            for (int i =0;i<intrare.Length;i++) {
                s += intrare[i];
            }
            int s1 = Convert.ToInt32(s.Substring(0, 4));
            
            int s2 = Convert.ToInt32(s.Substring(3, 4));
            int s3 = Convert.ToInt32(s.Substring(7, 4));
            int s4 = Convert.ToInt32(s.Substring(11, 4));

            return new int[4] { s1, s2, s3, s4 };
        }
            
        }

    }
    

